package com.inventario.model;

// Generated Sep 25, 2012 3:42:21 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Grupo generated by hbm2java
 */
@Entity
@Table(name = "fabricante")
public class Fabricante implements java.io.Serializable {

	private static final long serialVersionUID = 6864187202084740251L;

	private Integer id_fabricante;
	private String fabricante;

	private Set<Equipo> equipo = new HashSet<Equipo>(0);
	private Set<Impresora> impresora = new HashSet<Impresora>(0);
	private Set<Teclado> teclado = new HashSet<Teclado>(0);
	private Set<Scanner> scanner = new HashSet<Scanner>(0);
	private Set<Nobreak> nobreak = new HashSet<Nobreak>(0);
	private Set<Mouse> mouse = new HashSet<Mouse>(0);
	private Set<Monitor> monitor = new HashSet<Monitor>(0);


	public Fabricante() {
	}

	public Fabricante(Integer id_fabricante, String fabricante) {
		this.id_fabricante = id_fabricante;
		this.fabricante = fabricante;
	}

	public Fabricante(Integer id_fabricante, String fabricante,
			Set<Equipo> equipo) {
		this.id_fabricante = id_fabricante;
		this.fabricante = fabricante;
		this.equipo = equipo;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_fabricante", unique = true, nullable = false)
	public Integer getId_fabricante() {
		return this.id_fabricante;
	}

	public void setId_fabricante(Integer id_fabricante) {
		this.id_fabricante = id_fabricante;
	}

	@Column(name = "fabricante", length = 30)
	public String getFabricante() {
		return this.fabricante;
	}

	public void setFabricante(String fabricante) {
		this.fabricante = fabricante;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "fabricante")
	public Set<Equipo> getEquipo() {
		return this.equipo;
	}

	public void setEquipo(Set<Equipo> equipo) {
		this.equipo = equipo;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "fabricante")
	public Set<Impresora> getImpresora() {
		return this.impresora;
	}

	public void setImpresora(Set<Impresora> impresora) {
		this.impresora = impresora;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "fabricante")
	public Set<Teclado> getTeclado() {
		return this.teclado;
	}

	public void setteclado(Set<Teclado> teclado) {
		this.teclado = teclado;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "fabricante")
	public Set<Scanner> getScanner() {
		return this.scanner;
	}

	public void setScanner(Set<Scanner> scanner) {
		this.scanner = scanner;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "fabricante")
	public Set<Nobreak> getNobreak() {
		return this.nobreak;
	}

	public void setNobreak(Set<Nobreak> nobreak) {
		this.nobreak = nobreak;
	}
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "fabricante")
	public Set<Mouse> getMouse() {
		return this.mouse;
	}

	public void setMouse(Set<Mouse> mouse) {
		this.mouse = mouse;
	}
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "fabricante")
	public Set<Monitor> getMonitor() {
		return this.monitor;
	}

	public void setMonitor(Set<Monitor> monitor) {
		this.monitor = monitor;
	}

	/*
	 * void setUsuarios(Set<Usuario> usuarios) { this.usuarios = usuarios; }
	 * 
	 * @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy =
	 * "grupo") public Set<Usuario> getUsuarios() { return this.usuarios; }
	 * 
	 * @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	 * 
	 * @JoinTable(name = "grupo_autoridad", catalog = "dbpizza", joinColumns = {
	 * 
	 * @JoinColumn(name = "idgrupo", nullable = false, updatable = false) },
	 * inverseJoinColumns = { @JoinColumn(name = "idautoridad", nullable =
	 * false, updatable = false) }) public Set<Autoridad> getAutoridads() {
	 * return this.autoridads; }
	 * 
	 * public void setAutoridads(Set<Autoridad> autoridads) { this.autoridads =
	 * autoridads; }
	 */
}
