package com.inventario.model;

// Generated Sep 25, 2012 3:42:21 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Sucursal generated by hbm2java
 */
@Entity
@Table(name = "movimientos")
public class Movimientos implements java.io.Serializable {

	private static final long serialVersionUID = 6664585415209776596L;
	private Integer id_movimientos;
	private Equipo equipo;
	private Area area;
	private Departamento departamento;
	private Personal personal;
	private Date fecha;
	private String descripcion;
	
	public Movimientos() {
	}

	public Movimientos(int id_movimientos, Equipo equipo, Area area,
			Departamento departamento, Personal personal, Date fecha, String descripcion) {
		this.id_movimientos = id_movimientos;
		this.equipo = equipo;
		this.area = area;
		this.departamento = departamento;
		this.personal = personal;
		this.fecha = fecha;
		this.descripcion = descripcion;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_movimientos", unique = true, nullable = false)
	public Integer getId_movimientos() {
		return id_movimientos;
	}

	public void setId_movimientos(Integer id_movimientos) {
		this.id_movimientos = id_movimientos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_equipo", nullable = false)
	public Equipo getEquipo() {
		return equipo;
	}

	public void setEquipo(Equipo equipo) {
		this.equipo = equipo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_area", nullable = false)
	public Area getArea() {
		return area;
	}

	public void setArea(Area area) {
		this.area = area;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_departamento", nullable = false)
	public Departamento getDepartamento() {
		return departamento;
	}

	public void setDepartamento(Departamento departamento) {
		this.departamento = departamento;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_personal", nullable = false)
	public Personal getPersonal() {
		return personal;
	}

	public void setPersonal(Personal personal) {
		this.personal = personal;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", nullable = false , length = 16)
	public Date getFecha() {
		return fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}
	
	@Column(name = "descripcion", length = 250)
	public String getDescripcion() {
		return descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

}
